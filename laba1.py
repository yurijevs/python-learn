# Задание 1
# x = 5
# y = 2.3
# z = 2
# f = 7.8
# zf = z + f
# _1 = x * (y -x)/z
# _2 = zf/f**y
# _3 = (z - f)/z
# _4 = zf/z**y - f
# print((_1 + x + _2 - _3)/_4)

# =========================================
# Задание 2
# 1. десятичное число в двоичный формат
# print(bin(25))
# 2. двоичное число в десятичный формат
# print(int('100',2))
# 3. шестнадцатеричное число в десятичный формат
# print(int('653',16))
# 4. десятичное число в шестнадцатеричный формат
# print(hex(256))
# 5. шестнадцатеричное число в двоичный формат
# num_16 = hex(256)
# num_10 = int(str(num_16),16)
# print(bin(num_10))
# 6. двоичное число в шестнадцатеричный формат
# num_bin = bin(256)
# num_10 = int(str(num_bin),2)
# print(hex(num_10))

# =========================================
# Задание на практику
# 1. Вычислите 2 в степени 2019
# print(2**2019)
# 2. Сколько 7 содержится в числе 136
# print(136//7)
# 3. Выведите латинскую букву А 121 раз подряд
# print('A'*121)
# 4. Введите натуральное число N=5. Выведите "крылечко" из знаков "=": в первой строке 1, во второй 2, в N-й - N
# n=5
# print('='*(n-4), '='*(n-3), '='*(n-2), '='*(n-1), '='*n, sep='\n')
# 5. Число 2019 запишите 40 раз подряд. Результат возведите в квадрат. Что получилось?
# number='2019'
# number40=int('2019'*40)
# print(number40**2)
# или так
# print(int('2019'*40)**2)

# ==============================================================================
# Задание на практику
# 1. Запросите у пользователя два целых числа. Выведите значение наименьшего из них
# number1=int(input('Введите первое число: '))
# number2=int(input('Введите второе число: '))
# if number1 > number2 :
#        print('Наименьшее число: ', number2)
# else:
#        print('Наименьшее число: ', number1)
# 2. Запросите у пользователя три целых числа. Выведите значение наименьшего из них
# number1=int(input('Введите первое число: '))
# number2=int(input('Введите второе число: '))
# number3=int(input('Введите третье число: '))
# if number1 < number2 and number1 < number3:
#        print('Наименьшее число: ', number1)
# elif number2 < number3:
#        print('Наименьшее число: ', number2)
# else:
#        print('Наименьшее число: ', number3)
# 3. Для заданного числа x выведите значение sign(x). Эту задачу желательно решить с использованием каскадных инструкций if...elif...else…
# x=int(input('Введите число: '))
# if x > 0:
#        print('Число', x, 'положительное')
# elif x < 0:
#        print('Число', x, 'отрицательное')
# else:
#        print('Число', x, 'равно нулю')

# ===================================================
# Дополнительное задание
# 1. Шахматный слон. Т.к. слон ходит по диагонали, то по вертикали и горизонтали он перемещается на равное количество клеток.
# row1 = int(input('1. Введите начальную координату строки: '))
# col1 = int(input('1. Введите начальную координату столбца: '))
# row2 = int(input('2. Введите конечную координату строки: '))
# col2 = int(input('2. Введите конечную координату столбца: '))
# if abs(row1 - row2) == abs(col1 - col2):
#     print('Успех')
# else:
#     print('Провал')
# 2. Шахматный конь.
# row1 = int(input('1. Введите начальную координату строки: '))
# col1 = int(input('1. Введите начальную координату столбца: '))
# row2 = int(input('2. Введите конечную координату строки: '))
# col2 = int(input('2. Введите конечную координату столбца: '))
# vert = abs(row1 - row2) # перемещение по вертикали
# hor = abs(col1 - col2) # перемещение по горизонтали
# # либо по вертикали на 2 и по горизонтали на 1, либо по вертикали на 1 и по горизонтали на 2
# if vert == 2 and hor == 1 or vert == 1 and hor == 2:
#     print('Успех')
# else:
#     print('Провал')

# ========================================================
# Задания на while
# 1. Каждый день я пробегаю «следующую степень двойки» км.
# Сколько дней пройдет, пока я в сумме пробегу 1000 км?
# 10000 км? 1000 км за 9 дней. 10000 за 13 дней.
# kilometers = int(input('Количество километров? '))
# n = 1
# days = 0
# probeg = 2
# while kilometers > 0:
#     probeg = 2 ** n
#     kilometers -= probeg
#     n += 1
#     days += 1
# print(days)
# 2. Начав тренировки, спортсмен в первый день пробежал 10
# км. Для увеличения выносливости ему необходимо
# повышать норму бега через одну тренировку на 15% от
# нормы предыдущей тренировки. Спортсмен тренируется
# каждый день. Какой суммарный путь он пробежит за 30
# дней.
# days = int(input('Количество дней? '))
# sumprobeg = 0
# probeg = 10
# while days > 0:
#     if days % 2 != 0:
#         probeg = probeg + (0.15 * probeg)
#         sumprobeg += probeg
#         # print (days, probeg, sumprobeg)
#     else:
#         sumprobeg += probeg
#         # print (days, probeg, sumprobeg)
#     days -= 1
# print(round(sumprobeg,2), 'км')

# ===========================================================
# Задания на for
# 1. Вывести квадраты нечетных чисел до N
# n = int(input('n= '))
# for i in range(1,n,2):
#     print(i**2, end=' ')
# 2. Вывести прямоугольную рамочку из звёздочек, шириной А звёздочек и высотой В
# a = int(input('Введите ширину рамки: '))
# b = int(input('Введите высоту рамки: '))
# for row in range(1,b+1):
#     for col in range(1,a+1):
#         if col == 1 or col == a:
#             print('*', end=' ')
#         elif row == 1 or row == b:
#             print('*', end=' ')
#         else:
#             print(' ', end=' ')
#     print()
# 3. Даны натуральные числа А и В. Вывести сначала все чётные числа, заключённые между ними, потом все нечётные
# a = int(input('A = '))
# b = int(input('B = '))
# for i in range(a,b):
#     if i % 2 == 0:
#         print(i)
# for i in range(a,b):
#     if i % 2 != 0:
#         print(i)   
# 4. Исходный список содержит положительные и отрицательные числа. Требуется положительные поместить в один список, а отрицательные - в другой
# list1 = [-3, -5, -2, 5, 4, 7, -98, 11, -43]
# list_pos = [i for i in list1 if i >= 0]
# list_neg = [i for i in list1 if i < 0]
# print(f'Отрицательные числа: {list_neg}')
# print(f'Положительные: {list_pos}')

# Задания на if
# 1. Автор задумывает число (из интервала от 1 до 100).
# 2. Пользователь это число отгадывает: вводит свои варианты, получает
# ответы "больше, "меньше" или "да, это оно".
# • Уровень 1: играется всего одна партия
# • Уровень 2: в конце игры у пользователя спрашивают, хочет ли он
# сыграть ещё. Ведётся подсчёт партий.
# • Уровень 3: у пользователя есть лимит в 50 ходов на все партии, пока
# он его не исчерпал - играет. Ведётся подсчёт законченных партий.
# import random
# secret = random.randint(1,100)
# user_number = 0
# counter = 50
# games = 1
# print('Я загадал число от 1 до 100.', end='\n')
# while counter > 0:
#     print('Партия', games, end='\n')
#     # print('Осталось попыток', counter, end='\n')
#     while counter > 0:
#         user_number = int(input('Введите число: '))
#         if user_number > secret:
#             print('Загаданное число меньше, осталось попыток:', counter, end='\n')
#             counter -= 1
#         elif user_number < secret:
#             print('Загаданное число больше, осталось попыток:', counter, end='\n')
#             counter -= 1
#         elif user_number == secret:
#             games += 1
#             print('Верно, загаданное число -', secret, end='\n')
#             secret = int(random.randint(1,100))
#             break
#     if counter > 0:
#         next_game = str(input('Хотите еще раз? (Y, N) \n'))
#         if next_game.lower() == 'y':
#             continue
#         else:
#             print('Всего сыграно', games, 'партий')
#             break
# else:
#     print('Попытки закончились, загаданное число:', secret, '\n', 'всего сыграно', games, 'партий')

# =====================================================
# Задание на практику
# 1. С клавиатуры вводится число n.
# Вычислить сумму S = 1/1 + 1/2 + 1/3 + ...+ 1/n
# number = int(input('Введите число "n": '))
# summ = 0
# for i in range(1, number+1):
#     summ = summ+(1/i)
# print("Сумма гармонического ряда", round(summ, 2))
# 2. Вводится число n. Необходимо перевернуть его.
# number = int(input("Введите число: "))
# reverse_number = 0
# while number > 0:
#     # Находим последнюю цифру числа, остаток от деления
#     digit = number % 10
#     # "Удаляем цифру" из исходного числа
#     number = number // 10
#     # увеличиваем разряд искомого числа
#     reverse_number = reverse_number * 10
#     # добавляем найденую на первом шаге цифру
#     reverse_number = reverse_number + digit
# print('"Перевернутое" число:', reverse_number)
# 3. На вход программе подается последовательность целых чисел,
# заканчивающаяся числом 0.
# Выведите их среднее арифметическое, 0 при этом членом
# последовательности не считается.
# x = 0
# x1 = None
# summ = 0
# sred = 0
# while x1 != 0:
#     x1 = int(input('Введите число, для окончания ввода введите "0": '))
#     summ += x1
#     x += 1
# else:
#     sred = summ / (x-1)
#     print('Среднее арифметическое =', round(sred,2))

# ===============================================================
# Домашнее задание
# 1.  Для настольной игры используются карточки с номерами от 1
# до N. Одна карточка потерялась. Найдите ее, зная номера
# оставшихся карточек.
#  Введите число N – количество карточек.
#  Далее введите N−1 различных чисел в диапазоне от 1 до N - номера оставшихся карточек.
#  Программа должна вывести номер потерянной карточки.
# cards = int(input('Введите общее количество карточек: '))
# lost = 0
# for i in range(1, cards + 1):
#     lost += i
# for i in range(cards - 1):
#     lost -= int(input('Введите номер оставшейся карточки: '))
# print('Номер потерянной карточки:', lost)
# 2. Задача «Удалить каждый третий символ».
#  Дана строка.
#  Удалите из нее все символы, чьи индексы делятся на 3.
x = input('Введите строку: ')
y = ''
for i in range(len(x)):
    if (i+1) % 3 != 0:
        y = y + x[i]
print(y)